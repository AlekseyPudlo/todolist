{"version":3,"sources":["components/CloseButton.js","components/NavItem.js","components/CustomButton.js","components/NavPanel.js","components/ItemsList.js","components/TextInput.js","components/ListItem.js","components/Popup.js","App.js","serviceWorker.js","index.js"],"names":["CloseButton","react_default","a","createElement","type","className","onClick","this","props","Component","NavItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","lists","getListToShow","removeList","map","list","shortListName","components_CloseButton","CustomButton","_ref","text","objectWithoutProperties","assign","value","NavPanel","components_CustomButton","togglePopup","components_NavItem","ItemsList","handleCheckbox","item","items","name","TextInput","autoFocus","ListItem","addItem","concat","toConsumableArray","newItem","updateList","handleChange","event","setState","target","isChecked","handleSubmit","preventDefault","alert","closeList","prevProps","onSubmit","id","listName","components_TextInput","onChange","placeholder","maxLength","components_ItemsList","Popup","shortName","length","slice","discard","createList","key","keyCounter","showPopup","title","App","newList","some","stateList","listToRender","filter","element","listToRemove","prevState","components_NavPanel","components_ListItem","components_Popup","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iaAmBeA,gMAZb,OACCC,EAAAC,EAAAC,cAAA,UACCC,KAAK,SACLC,UAAU,QACVC,QAASC,KAAKC,MAAMF,SAHrB,eAJuBG,cCsBXC,qBArBd,SAAAA,EAAYF,GAAO,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAG,IAClBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAT,KAAMC,KACDS,MAAQ,GAFKN,wEAMlB,IAAMO,EAAQX,KAAKC,MAAMU,MACnBC,EAAgBZ,KAAKC,MAAMW,cAC3BC,EAAab,KAAKC,MAAMY,WAE9B,OAAOF,EAAMG,IAAI,SAAAC,GAAI,OACpBrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYC,QAAS,kBAAMa,EAAcG,KACvDA,EAAKC,eAEPtB,EAAAC,EAAAC,cAACqB,EAAD,CAAalB,QAAS,kBAAMc,EAAWE,gBAhBrBb,qBCSPgB,SAVM,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAASnB,EAAYI,OAAAgB,EAAA,EAAAhB,CAAAc,EAAA,UAC5C,MAAsB,WAAflB,EAAMJ,KACZH,EAAAC,EAAAC,cAAA,QAAAS,OAAAiB,OAAA,CAAOxB,UAAU,iBAAoBG,EAArC,CAA4CsB,MAAOH,KAEnD1B,EAAAC,EAAAC,cAAA,SAAAS,OAAAiB,OAAA,CAAQxB,UAAU,iBAAoBG,GACpCmB,KCoBWI,qBAtBd,SAAAA,EAAYvB,GAAO,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAwB,IAClBpB,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAmB,GAAAf,KAAAT,KAAMC,KACDS,MAAQ,GAFKN,wEAMlB,OACCV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAC6B,EAAD,CACC1B,QAASC,KAAKC,MAAMyB,YACpBN,KAAK,qBAEN1B,EAAAC,EAAAC,cAAC+B,EAAD,CACChB,MAAOX,KAAKC,MAAMU,MAClBC,cAAeZ,KAAKC,MAAMW,cAC1BC,WAAYb,KAAKC,MAAMY,qBAhBLX,cCwBR0B,qBAzBd,SAAAA,EAAY3B,GAAO,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAA4B,IAClBxB,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAuB,GAAAnB,KAAAT,KAAMC,KAIP4B,eAAiB,SAAAC,KAHhB1B,EAAKM,MAAQ,GAFKN,wEAUlB,OACCV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbE,KAAKC,MAAM8B,MAAMjB,IAAI,SAAAgB,GACrB,OACCpC,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kBAChBJ,EAAAC,EAAAC,cAAA,SAAOC,KAAK,WAAWC,UAAU,oBAChCgC,EAAKE,gBAjBW9B,cCIT+B,SAJG,SAAAhC,GACjB,OAAOP,EAAAC,EAAAC,cAAA,QAAAS,OAAAiB,OAAA,GAAWrB,EAAX,CAAkBH,UAAU,aAAaoC,WAAW,OC2E7CC,qBAvEd,SAAAA,EAAYlC,GAAO,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAmC,IAClB/B,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAA8B,GAAA1B,KAAAT,KAAMC,KAqBPmC,QAAU,WACT,IAAIL,EAAK,GAAAM,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAOD,EAAKH,MAAMc,KAAKgB,OAAvB,CAA8B3B,EAAKM,MAAM6B,UAC9CxB,EAAOX,EAAKH,MAAMc,KACtBA,EAAKgB,MAAQA,EACb3B,EAAKH,MAAMuC,WAAWzB,IA1BJX,EA6BnBqC,aAAe,SAAAC,GACdtC,EAAKuC,SAAS,CACbJ,QAAS,CACRP,KAAMU,EAAME,OAAOrB,MACnBsB,WAAW,MAjCKzC,EAsCnB0C,aAAe,SAAAJ,GACdA,EAAMK,iBACN3C,EAAKM,MAAM6B,QAAQP,KAChB5B,EAAKgC,UACLY,MAAM,kCA1CS5C,EA6CnB6C,UAAY,kBAAM7C,EAAKH,MAAMW,cAAc,OA3C1CR,EAAKM,MAAQ,CACZ6B,QAAS,CACRP,KAAM,GACNa,WAAW,IALKzC,kFAUA8C,GAEdlD,KAAKC,QAAUiD,GAClBlD,KAAK2C,SAAS,CACbJ,QAAS,CACRP,KAAM,GACNa,WAAW,sCAgCd,IAAM9B,EAAOf,KAAKC,MAAMc,KACxB,OAAQA,EACPrB,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAOqD,SAAUnD,KAAK8C,cACrCpD,EAAAC,EAAAC,cAAA,OAAKwD,GAAG,aAAatD,UAAU,eAC9BJ,EAAAC,EAAAC,cAAA,UAAKmB,EAAKsC,UACV3D,EAAAC,EAAAC,cAACqB,EAAD,CAAalB,QAASC,KAAKiD,aAE5BvD,EAAAC,EAAAC,cAAA,OAAKwD,GAAG,kBACP1D,EAAAC,EAAAC,cAAC0D,EAAD,CACC/B,MAAOvB,KAAKU,MAAM6B,QAAQP,KAC1BuB,SAAUvD,KAAKyC,aACf5C,KAAK,OACL2D,YAAY,yBACZC,UAAW,KAEZ/D,EAAAC,EAAAC,cAAC6B,EAAD,CAAc5B,KAAK,SAASuB,KAAK,SAElC1B,EAAAC,EAAAC,cAAC8D,EAAD,CAAW3B,MAAOhB,EAAKgB,SAhBV,YAlDM7B,cCuERyD,qBAvEd,SAAAA,EAAY1D,GAAO,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAA2D,IAClBvD,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAsD,GAAAlD,KAAAT,KAAMC,KAOP2D,UAAY,SAAA5B,GACX,OAAOA,EAAK6B,OAAS,EAAI7B,EAAK8B,MAAM,EAAG,GAAGzB,OAAO,OAASL,GATxC5B,EAYnB2D,QAAU,WACT3D,EAAKH,MAAMyB,cACXtB,EAAKuC,SAAS,CACbU,SAAU,MAfOjD,EAmBnBqC,aAAe,SAAAC,GACdtC,EAAKuC,SAAS,CACbU,SAAUX,EAAME,OAAOrB,SArBNnB,EAyBnB0C,aAAe,SAAAJ,GACVA,GAAOA,EAAMK,iBAChB3C,EAAKM,MAAM2C,SAETjD,EAAKH,MAAM+D,WAAW,CACtBX,SAAUjD,EAAKM,MAAM2C,SACrBrC,cAAeZ,EAAKwD,UAAUxD,EAAKM,MAAM2C,UACzCY,IAAK7D,EAAKM,MAAMwD,WAChBnC,MAAO,KALPiB,MAAM,uCAOT5C,EAAKuC,SAAS,CACbU,SAAU,GACVa,WAAY9D,EAAKM,MAAMwD,WAAa,KAnCrC9D,EAAKM,MAAQ,CACZ2C,SAAU,GACVa,WAAY,GAJK9D,wEA0ClB,IAAM+D,EAAYnE,KAAKC,MAAMkE,UACvBC,EAASpE,KAAKU,MAAM2C,SAEvBrD,KAAK4D,UAAU5D,KAAKU,MAAM2C,UAD1B,QAGH,OAAQc,EACPzE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAcqD,SAAUnD,KAAK8C,cAC5CpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACdJ,EAAAC,EAAAC,cAAA,oBAAYwE,EAAZ,SACA1E,EAAAC,EAAAC,cAACqB,EAAD,CAAalB,QAASC,KAAK+D,WAE5BrE,EAAAC,EAAAC,cAAC0D,EAAD,CACC/B,MAAOvB,KAAKU,MAAM2C,SAClBE,SAAUvD,KAAKyC,aACf5C,KAAK,OACL2D,YAAY,+BACZC,UAAW,KAEZ/D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACdJ,EAAAC,EAAAC,cAAC6B,EAAD,CAAc5B,KAAK,SAASuB,KAAK,SACjC1B,EAAAC,EAAAC,cAAC6B,EAAD,CAAc1B,QAASC,KAAK+D,QAAS3C,KAAK,eAhB1B,YAhDFlB,cCkFLmE,cAjFd,SAAAA,EAAYpE,GAAO,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAqE,IAClBjE,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAgE,GAAA5D,KAAAT,KAAMC,KAQPyB,YAAc,WACbtB,EAAKuC,SAAS,CAAEwB,WAAY/D,EAAKM,MAAMyD,aAVrB/D,EAanB4D,WAAa,SAAAM,GACZlE,EAAKM,MAAMC,MAAM4D,KAAK,SAAAC,GAAS,OAAIA,EAAUnB,WAAaiB,EAAQjB,WAC/DL,MAAM,8BAAgCsB,EAAQjB,SAAW,WACzDjD,EAAKuC,SAAS,CACdhC,MAAK,GAAA0B,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAMD,EAAKM,MAAMC,OAAjB,CAAwB2D,IAC7BH,WAAY/D,EAAKM,MAAMyD,UACvBM,aAAcH,KAnBClE,EAuBnBoC,WAAa,SAAAzB,GACZ,IAAMJ,EAAK,GAAA0B,OAAAhC,OAAAiC,EAAA,EAAAjC,CACPD,EAAKM,MAAMC,MAAM+D,OAAO,SAAAC,GAAO,OAAIA,EAAQV,MAAQlD,EAAKkD,OADjD,CAEVlD,IAEDX,EAAKuC,SAAS,CACbhC,WA7BiBP,EAiCnBQ,cAAgB,SAAAG,GACfX,EAAKuC,SAAS,CACb8B,aAAc1D,KAnCGX,EAuCnBS,WAAa,SAAA+D,GACZxE,EAAKuC,SAAS,SAAAkC,GASb,MAAO,CACNlE,MATakE,EAAUlE,MAAM+D,OAC7B,SAAA3D,GAAI,OAAIA,EAAKkD,MAAQW,EAAaX,MASlCQ,aANCI,EAAUJ,cACXI,EAAUJ,aAAaR,MAAQW,EAAaX,IAEzCY,EAAUJ,aADV,SA7CLrE,EAAKM,MAAQ,CACZC,MAAO,GACPwD,WAAW,EACXM,aAAc,MALGrE,wEAyDlB,OACCV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdJ,EAAAC,EAAAC,cAACkF,EAAD,CACClE,cAAeZ,KAAKY,cACpBC,WAAYb,KAAKa,WACjBa,YAAa1B,KAAK0B,YAClBf,MAAOX,KAAKU,MAAMC,MAClBK,cAAehB,KAAKgB,gBAErBtB,EAAAC,EAAAC,cAACmF,EAAD,CACChE,KAAMf,KAAKU,MAAM+D,aACjB7D,cAAeZ,KAAKY,cACpB4B,WAAYxC,KAAKwC,aAElB9C,EAAAC,EAAAC,cAACoF,EAAD,CACCb,UAAWnE,KAAKU,MAAMyD,UACtBzC,YAAa1B,KAAK0B,YAClBsC,WAAYhE,KAAKgE,qBA3EJ9D,aCME+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ff2aff72.chunk.js","sourcesContent":["import React, {Component} from \"react\"\nimport \"./styles/CloseButton.css\"\n\n\nclass CloseButton extends Component {\n\t\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"close\"\n\t\t\t\tonClick={this.props.onClick}\n\t\t\t>\n\t\t\t\t&times;\n\t\t\t</button>\n\t\t)\n\t}\n}\n\nexport default CloseButton;","import React, { Component } from \"react\";\nimport CloseButton from \"./CloseButton.js\";\nimport \"./styles/NavItem.css\";\n\nclass NavItem extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\tconst lists = this.props.lists;\n\t\tconst getListToShow = this.props.getListToShow;\n\t\tconst removeList = this.props.removeList;\n\n\t\treturn lists.map(list => (\n\t\t\t<div className=\"item\">\n\t\t\t\t<span className=\"item-link\" onClick={() => getListToShow(list)}>\n\t\t\t\t\t{list.shortListName}\n\t\t\t\t</span>\n\t\t\t\t<CloseButton onClick={() => removeList(list)} />\n\t\t\t</div>\n\t\t));\n\t}\n}\n\nexport default NavItem;\n","import React from \"react\";\nimport \"./styles/CustomButton.css\";\n\nconst CustomButton = ({ text, ...props }) => {\n\treturn props.type === \"submit\" ? (\n\t\t<input className=\"custom-button\" {...props} value={text} />\n\t) : (\n\t\t<button className=\"custom-button\" {...props}>\n\t\t\t{text}\n\t\t</button>\n\t);\n};\n\nexport default CustomButton;\n","import React, { Component } from \"react\";\nimport NavItem from \"./NavItem.js\";\nimport CustomButton from \"./CustomButton.js\";\nimport \"./styles/NavPanel.css\";\n\nclass NavPanel extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"Nav-panel\">\n\t\t\t\t<CustomButton\n\t\t\t\t\tonClick={this.props.togglePopup}\n\t\t\t\t\ttext=\"Create ToDo List\"\n\t\t\t\t/>\n\t\t\t\t<NavItem\n\t\t\t\t\tlists={this.props.lists}\n\t\t\t\t\tgetListToShow={this.props.getListToShow}\n\t\t\t\t\tremoveList={this.props.removeList}\n\t\t\t\t/>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default NavPanel;\n","import React, { Component } from \"react\";\nimport \"./styles/ItemsList.css\";\n\nclass ItemsList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { };\n\t}\n\n\thandleCheckbox = item => {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"list-items\">\n\t\t\t\t{this.props.items.map(item => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<label className=\"checkbox-label\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"checkbox-custom\"/>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ItemsList;\n","import React from \"react\";\nimport \"./styles/TextInput.css\";\n\nconst TextInput = props => {\n\treturn <input {...props} className=\"text-input\" autoFocus={true} />;\n};\n\nexport default TextInput;\n","import React, { Component } from \"react\";\nimport ItemsList from \"./ItemsList.js\";\nimport CloseButton from \"./CloseButton.js\";\nimport CustomButton from \"./CustomButton.js\";\nimport TextInput from \"./TextInput.js\";\nimport \"./styles/ListItem.css\";\n\nclass ListItem extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewItem: {\n\t\t\t\tname: \"\",\n\t\t\t\tisChecked: false\n\t\t\t}\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// Typical usage (don't forget to compare props):\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.setState({\n\t\t\t\tnewItem: {\n\t\t\t\t\tname: \"\",\n\t\t\t\t\tisChecked: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\taddItem = () => {\n\t\tlet items = [...this.props.list.items, this.state.newItem];\n\t\tlet list = this.props.list;\n\t\tlist.items = items;\n\t\tthis.props.updateList(list);\n\t};\n\n\thandleChange = event => {\n\t\tthis.setState({\n\t\t\tnewItem: {\n\t\t\t\tname: event.target.value,\n\t\t\t\tisChecked: false,\n\t\t\t},\n\t\t});\n\t};\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tthis.state.newItem.name\n\t\t\t? this.addItem()\n\t\t\t: alert(\"Items Name cannot be empty!..\");\n\t};\n\n\tcloseList = () => this.props.getListToShow(null);\n\n\trender() {\n\t\tconst list = this.props.list;\n\t\treturn !list ? null : (\n\t\t\t<form className=\"list\" onSubmit={this.handleSubmit}>\n\t\t\t\t<div id=\"list-title\" className=\"flex-nowrap\">\n\t\t\t\t\t<h2>{list.listName}</h2>\n\t\t\t\t\t<CloseButton onClick={this.closeList} />\n\t\t\t\t</div>\n\t\t\t\t<div id=\"add-list-input\">\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tvalue={this.state.newItem.name}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Type your task here...\"\n\t\t\t\t\t\tmaxLength={40}\n\t\t\t\t\t/>\n\t\t\t\t\t<CustomButton type=\"submit\" text=\"ADD\" />\n\t\t\t\t</div>\n\t\t\t\t<ItemsList items={list.items} />\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default ListItem;\n","import React, { Component } from \"react\";\nimport CustomButton from \"./CustomButton.js\";\nimport CloseButton from \"./CloseButton.js\";\nimport TextInput from \"./TextInput.js\";\nimport \"./styles/Popup.css\";\n\nclass Popup extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlistName: \"\",\n\t\t\tkeyCounter: 0\n\t\t};\n\t}\n\n\tshortName = name => {\n\t\treturn name.length > 9 ? name.slice(0, 9).concat(\"...\") : name;\n\t};\n\n\tdiscard = () => {\n\t\tthis.props.togglePopup();\n\t\tthis.setState({\n\t\t\tlistName: \"\"\n\t\t});\n\t};\n\n\thandleChange = event => {\n\t\tthis.setState({\n\t\t\tlistName: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = event => {\n\t\tif (event) event.preventDefault();\n\t\t!this.state.listName\n\t\t\t? alert(\"The List Name could not be empty!..\")\n\t\t\t: this.props.createList({\n\t\t\t\t\tlistName: this.state.listName,\n\t\t\t\t\tshortListName: this.shortName(this.state.listName),\n\t\t\t\t\tkey: this.state.keyCounter,\n\t\t\t\t\titems: []\n\t\t\t  });\n\t\tthis.setState({\n\t\t\tlistName: \"\",\n\t\t\tkeyCounter: this.state.keyCounter + 1\n\t\t});\n\t};\n\n\trender() {\n\t\tconst showPopup = this.props.showPopup;\n\t\tconst title = !this.state.listName\n\t\t\t? \"a new\"\n\t\t\t: this.shortName(this.state.listName);\n\n\t\treturn !showPopup ? null : (\n\t\t\t<div className=\"popup\">\n\t\t\t\t<form className=\"popup-inner\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div className=\"popup-title\">\n\t\t\t\t\t\t<h4>Create {title} list</h4>\n\t\t\t\t\t\t<CloseButton onClick={this.discard} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tvalue={this.state.listName}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Type the List name please...\"\n\t\t\t\t\t\tmaxLength={16}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button-form\">\n\t\t\t\t\t\t<CustomButton type=\"submit\" text=\"Save\" />\n\t\t\t\t\t\t<CustomButton onClick={this.discard} text=\"Discard\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Popup;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavPanel from \"./components/NavPanel.js\";\nimport ListItem from \"./components/ListItem.js\";\nimport Popup from \"./components/Popup.js\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlists: [],\n\t\t\tshowPopup: false,\n\t\t\tlistToRender: null\n\t\t};\n\t}\n\n\ttogglePopup = () => {\n\t\tthis.setState({ showPopup: !this.state.showPopup });\n\t};\n\n\tcreateList = newList => {\n\t\tthis.state.lists.some(stateList => stateList.listName === newList.listName)\n\t\t\t? alert('There is the element with \"' + newList.listName + '\" name.')\n\t\t\t: this.setState({\n\t\t\t\t\tlists: [...this.state.lists, newList],\n\t\t\t\t\tshowPopup: !this.state.showPopup,\n\t\t\t\t\tlistToRender: newList\n\t\t\t  });\n\t};\n\n\tupdateList = list => {\n\t\tconst lists = [\n\t\t\t...this.state.lists.filter(element => element.key !== list.key),\n\t\t\tlist\n\t\t];\n\t\tthis.setState({\n\t\t\tlists\n\t\t});\n\t};\n\n\tgetListToShow = list => {\n\t\tthis.setState({\n\t\t\tlistToRender: list\n\t\t});\n\t};\n\n\tremoveList = listToRemove => {\n\t\tthis.setState(prevState => {\n\t\t\tconst lists = prevState.lists.filter(\n\t\t\t\tlist => list.key !== listToRemove.key\n\t\t\t);\n\t\t\tconst listToRender =\n\t\t\t\t!prevState.listToRender ||\n\t\t\t\tprevState.listToRender.key === listToRemove.key\n\t\t\t\t\t? null\n\t\t\t\t\t: prevState.listToRender;\n\t\t\treturn {\n\t\t\t\tlists,\n\t\t\t\tlistToRender\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<NavPanel\n\t\t\t\t\tgetListToShow={this.getListToShow}\n\t\t\t\t\tremoveList={this.removeList}\n\t\t\t\t\ttogglePopup={this.togglePopup}\n\t\t\t\t\tlists={this.state.lists}\n\t\t\t\t\tshortListName={this.shortListName}\n\t\t\t\t/>\n\t\t\t\t<ListItem\n\t\t\t\t\tlist={this.state.listToRender}\n\t\t\t\t\tgetListToShow={this.getListToShow}\n\t\t\t\t\tupdateList={this.updateList}\n\t\t\t\t/>\n\t\t\t\t<Popup\n\t\t\t\t\tshowPopup={this.state.showPopup}\n\t\t\t\t\ttogglePopup={this.togglePopup}\n\t\t\t\t\tcreateList={this.createList}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}